<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>collisionLayerDepth = 1000;
Tilemap = ds_grid_create(room_width/TILE_SIZE, room_height/TILE_SIZE);

var tiles = tile_get_ids_at_depth(collisionLayerDepth); //Get all tiles on the collidable layer
ds_grid_clear(Tilemap, -1);
for (var tileIndex = 0; tileIndex &lt; array_length_1d(tiles); tileIndex++;)
{
    var TileInfoList = ds_list_create();
    ds_list_add(TileInfoList, 0,0);
    var tileXPos = floor(tile_get_x(tiles[tileIndex]) / TILE_SIZE) * TILE_SIZE;
    var tileYPos = floor(tile_get_y(tiles[tileIndex]) / TILE_SIZE) * TILE_SIZE;

    for(var TilePixelY = 0; TilePixelY &lt; TILE_SIZE; TilePixelY++)
    {
        if (tile_layer_find(collisionLayerDepth, tileXPos, tileYPos + TilePixelY) == tiles[tileIndex]) //If we hit the tile we are looping over on the left
        {
            ds_list_replace(TileInfoList, 0, TilePixelY); //Store how many pixels from the top we find the leftmost edge of the tile
        }
        if (tile_layer_find(collisionLayerDepth, tileXPos + TILE_SIZE - 1, tileYPos + TilePixelY) == tiles[tileIndex]) //If we hit the tile we are looping over on the right
        { 
            ds_list_replace(TileInfoList, 1, TilePixelY); //Store how many pixels from the top we find the rightmost edge of the tile
        }
    }
    Tilemap[# tileXPos / TILE_SIZE, tileYPos / TILE_SIZE] = TileInfoList;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tile;
tile = tile_layer_find(1000, mouse_x, mouse_y);
if tile != -1
{
    draw_set_color(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font1);
for(var xx = 0; xx &lt; ds_grid_width(Tilemap); xx++)
{
    for(var yy = 0; yy &lt; ds_grid_height(Tilemap); yy++)
    {
        if(ds_exists(Tilemap[# xx, yy], ds_type_list))
        {
            draw_text(xx * TILE_SIZE,yy * TILE_SIZE, ds_list_find_value(Tilemap[# xx, yy], 0));
            draw_text(xx * TILE_SIZE + (TILE_SIZE - TILE_SIZE/3),yy * TILE_SIZE, ds_list_find_value(Tilemap[# xx, yy], 1));
        }
    }     
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
