<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_testenemie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_light</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sawPlayer =     false;
angle =         0;
rayDist =       -600;
turnSpeed =     0.2;
turnUp =        false;
coneWidth =     6;
maxAngle =      90;
minAngle =      0;

//LIGHT VARS//
sizeX =         5.0;
sizeY =         5.0;
lightSprite =   spr_spotlight;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i = -1; i &lt;= 1; i++)
{
    sawPlayer = collision_line(
    x,
    y, 
    x + lengthdir_x(rayDist, angle + coneWidth * i), 
    y + lengthdir_y(rayDist, angle + coneWidth * i),
    obj_player,
    true,
    true);
    
    if(sawPlayer) break;
}

if (angle == minAngle){
    turnUp = false;
} else if (angle &gt;= maxAngle){
    turnUp = true;
}

if (turnUp){
    angle -= turnSpeed;
}else{
    angle += turnSpeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if(sawPlayer)
{
    draw_sprite_ext(spr_spotted, 0, x - 5, y - 20, 3, 3, 0, c_white, 1);
}

if(debug_mode)
{
    draw_set_color(c_white);
    if(sawPlayer)
    {
        draw_set_color(c_red)
    }
    for(i = -1; i &lt;= 1; i++)
    {
        draw_line(
        x,
        y, 
        x + lengthdir_x(rayDist, angle + coneWidth * i), 
        y + lengthdir_y(rayDist, angle + coneWidth * i)
        );
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
