<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>light_surface = surface_create(view_wview, view_hview);
ambient_light = 0.7;

application_surface_draw_enable(false);

uniform_ambient = shader_get_uniform(shd_multiply, "u_fAmbient");
sampler_light = shader_get_sampler_index(shd_multiply, "u_sLight");

streaming = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!surface_exists(light_surface)){
    light_surface = surface_create(view_wview, view_hview);
}
/*if(streaming)
{
    part_emitter_region(fogSystem,fogEffect,0,view_wview,0,view_hview,ps_shape_rectangle,ps_distr_linear);    
    part_emitter_burst( fogSystem,  fogEffect,  fogPart, 5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(!streaming)
{
fogSystem = part_system_create();
part_system_automatic_draw(fogSystem, false);
part_system_depth(fogSystem, depth - 10);
fogPart = part_type_create();

part_type_shape(fogPart, pt_shape_cloud);

part_type_size( fogPart, 3, 6, 0, 0);
part_type_scale( fogPart, 1, 1);
part_type_colour_mix( fogPart, c_olive, c_red);
part_type_blend( fogPart, 0);
part_type_alpha2(fogPart,.5,.1);
part_type_gravity(fogPart,0.005,10);
part_type_speed(fogPart,0.5,0.5,0,1);
part_type_direction(fogPart,250,330,0,1);
part_type_orientation(fogPart,0,359,0,0,0);
part_type_life(fogPart,100,1000);

fogEffect = part_emitter_create(fogSystem);

streaming = true;
repeat(3000){
    part_system_update(fogSystem);
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shader_set(shd_multiply);
shader_set_uniform_f(uniform_ambient, ambient_light);
texture_set_stage(sampler_light, surface_get_texture(light_surface));

draw_surface(application_surface, 0, 0);
shader_reset();
draw_surface(global.guiSurf, 0, 0);
surface_set_target(global.guiSurf);
draw_clear_alpha(c_white, 0);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(light_surface);
draw_clear_alpha(c_black, 1);
draw_set_blend_mode(bm_add);
draw_set_color(c_white);
draw_set_alpha(1);

//only if the light is on screen
with(obj_light)
{
    if(rectangle_in_circle(view_xview, view_yview, view_xview + view_wview, view_yview + view_hview, x, y, lightDistance)){
        draw_primitive_begin(pr_trianglefan);
        draw_vertex(x - view_xview, y - view_yview);
        for(var rayIndex = 0; rayIndex &lt; numLightRays; rayIndex++)
        {
            scr_castRay(x,y, rayAngleIncrement * rayIndex, obj_collision_box, lightDistance, lightChunkSize);
            //draw_set_alpha(1);
            draw_set_alpha(1 - lightDistance/point_distance(x,y,rayHitPointX,rayHitPointY));
            draw_vertex(rayHitPointX - view_xview, rayHitPointY - view_yview);
            if(rayIndex == 0)
            {
                reconnectPointX = rayHitPointX - view_xview;
                reconnectPointY = rayHitPointY - view_yview;
            }
        }
        draw_vertex(reconnectPointX, reconnectPointY);
            draw_set_alpha(1);
        draw_primitive_end();
    }
}

draw_set_blend_mode(bm_normal);
surface_reset_target();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
